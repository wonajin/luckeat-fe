name: 🚀 Deploy to S3

on:
  push:
    branches:
      - main
      - dev
      - 371-센트리-self-hosted-로-이관

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "CLOUDFRONT_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }}" >> $GITHUB_ENV
            echo "VITE_API_URL=${{ secrets.VITE_API_URL_PROD }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "CLOUDFRONT_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}" >> $GITHUB_ENV
            echo "VITE_API_URL=${{ secrets.VITE_API_URL_DEV }}" >> $GITHUB_ENV
          fi
          echo "Deploying to $ENVIRONMENT environment"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Install Kakao Maps SDK
        run: npm install react-kakao-maps-sdk

      - name: Build
        run: npm run build
        env:
          NODE_ENV: ${{ env.ENVIRONMENT }}
          VITE_MODE: ${{ env.ENVIRONMENT }}
          VITE_KAKAO_API_KEY: ${{ secrets.VITE_KAKAO_API_KEY }}
          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VITE_API_URL: ${{ env.VITE_API_URL }}

      - name: List build directory
        run: |
          echo "Checking build output directories..."
          ls -la
          if [ -d "dist" ]; then
            echo "Found dist directory"
            ls -la dist
            if [ -d "dist/${{ env.ENVIRONMENT }}" ]; then
              echo "Found dist/${{ env.ENVIRONMENT }} directory"
              ls -la dist/${{ env.ENVIRONMENT }}
            fi
          else
            echo "No standard build directory found. Checking other possibilities..."
            find . -type d -maxdepth 2 | grep -v "node_modules" | grep -v ".git"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Deploy to S3
        run: |
          if [ -d "dist/${{ env.ENVIRONMENT }}" ]; then
            echo "Deploying from dist/${{ env.ENVIRONMENT }} directory to ${{ env.ENVIRONMENT }} environment..."
            aws s3 sync ./dist/${{ env.ENVIRONMENT }} s3://luckeat-front/${{ env.ENVIRONMENT }} --exclude "images/*" --exclude "store/*"
          else
            echo "No dist/${{ env.ENVIRONMENT }} directory found. Please check your build configuration."
            exit 1
          fi
          echo "Deployment to ${{ env.ENVIRONMENT }} completed successfully"

      - name: Invalidate CloudFront Cache
        run: |
          echo "Invalidating CloudFront distribution cache for ${{ env.ENVIRONMENT }}..."
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_ID }} --paths "/*"
          echo "CloudFront cache invalidation completed for ${{ env.ENVIRONMENT }}"
